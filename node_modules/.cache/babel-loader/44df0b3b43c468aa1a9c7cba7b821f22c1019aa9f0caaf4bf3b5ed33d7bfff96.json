{"ast":null,"code":"import _objectSpread from\"/Users/admin/Desktop/xummor-somsa/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import Navbar from'../component/Navbar/Navbar';import Header from'../component/Header/Header';import Tabs from'../component/Buttons-header/Tabs';import Menu from'../component/Menu/Menu';import Footer from'../component/Footer/Footer';import Cart from'./Cart/Cart';import DeliveryForm from'./Location/Delivery';import OrderAccepted from'./Order-accepted/Order-accepted';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Home(){// Состояние для открытия/закрытия корзины\nconst[isCartOpen,setIsCartOpen]=useState(false);// Состояние для модала подтверждения заказа\nconst[isOrderAcceptedOpen,setIsOrderAcceptedOpen]=useState(false);// Состояние для выбранной категории\nconst[selectedCategory,setSelectedCategory]=useState(\"somsa\");// Пример данных корзины (в реальном приложении это будет из глобального состояния)\nconst[cartItems,setCartItems]=useState([]);// Функция для открытия корзины\nconst openCart=()=>{setIsCartOpen(true);};// Функция для закрытия корзины\nconst closeCart=()=>{setIsCartOpen(false);};// Функция для добавления товара в корзину\nconst addToCart=(product,quantity)=>{setCartItems(prev=>{const existing=prev.find(item=>item.id===product.id);if(existing){return prev.map(item=>item.id===product.id?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+quantity}):item);}else{return[...prev,_objectSpread(_objectSpread({},product),{},{quantity})];}});};// Функция для обновления корзины из Cart компонента\nconst updateCartItems=updatedItems=>{setCartItems(updatedItems.map(item=>_objectSpread(_objectSpread({},item),{},{quantity:item.count})));};// Функция для открытия доставки\nconst openDelivery=()=>{setShowDelivery(true);};// Функция для открытия модала подтверждения заказа\nconst openOrderAccepted=()=>{setIsOrderAcceptedOpen(true);setShowDelivery(false);// Закрыть модал доставки\n};// Функция для закрытия модала подтверждения заказа\nconst closeOrderAccepted=()=>{setIsOrderAcceptedOpen(false);};// Umumiy narxni hisoblash\nconst totalPrice=cartItems.reduce((sum,item)=>sum+item.price*item.quantity,0);const[showDelivery,setShowDelivery]=useState(false);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{onCartClick:openCart,totalPrice:totalPrice}),/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Tabs,{selectedCategory:selectedCategory,onSelectCategory:setSelectedCategory}),/*#__PURE__*/_jsx(Menu,{selectedCategory:selectedCategory,addToCart:addToCart}),/*#__PURE__*/_jsx(Footer,{}),isCartOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"cart-modal-overlay\",children:/*#__PURE__*/_jsx(Cart,{onClose:closeCart,cartItems:cartItems,updateCartItems:updateCartItems,openDelivery:openDelivery})}),showDelivery&&/*#__PURE__*/_jsx(\"div\",{className:\"delivery-modal-overlay\",children:/*#__PURE__*/_jsx(DeliveryForm,{onClose:()=>setShowDelivery(false),cartItems:cartItems,onOrderAccepted:openOrderAccepted})}),isOrderAcceptedOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"order-accepted-modal-overlay\",children:/*#__PURE__*/_jsx(OrderAccepted,{onClose:closeOrderAccepted})})]});}","map":{"version":3,"names":["React","useState","Navbar","Header","Tabs","Menu","Footer","Cart","DeliveryForm","OrderAccepted","jsx","_jsx","jsxs","_jsxs","Home","isCartOpen","setIsCartOpen","isOrderAcceptedOpen","setIsOrderAcceptedOpen","selectedCategory","setSelectedCategory","cartItems","setCartItems","openCart","closeCart","addToCart","product","quantity","prev","existing","find","item","id","map","_objectSpread","updateCartItems","updatedItems","count","openDelivery","setShowDelivery","openOrderAccepted","closeOrderAccepted","totalPrice","reduce","sum","price","showDelivery","children","onCartClick","onSelectCategory","className","onClose","onOrderAccepted"],"sources":["/Users/admin/Desktop/xummor-somsa/src/pages/Home.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Navbar from '../component/Navbar/Navbar';\nimport Header from '../component/Header/Header';\nimport Tabs from '../component/Buttons-header/Tabs';\nimport Menu from '../component/Menu/Menu';\nimport Footer from '../component/Footer/Footer';\nimport Cart from './Cart/Cart';\nimport DeliveryForm from './Location/Delivery';\nimport OrderAccepted from './Order-accepted/Order-accepted';\n\n\n\n\nexport default function Home() {\n  // Состояние для открытия/закрытия корзины\n  const [isCartOpen, setIsCartOpen] = useState(false);\n\n  // Состояние для модала подтверждения заказа\n  const [isOrderAcceptedOpen, setIsOrderAcceptedOpen] = useState(false);\n\n  // Состояние для выбранной категории\n  const [selectedCategory, setSelectedCategory] = useState(\"somsa\");\n\n  // Пример данных корзины (в реальном приложении это будет из глобального состояния)\n  const [cartItems, setCartItems] = useState([]);\n\n  // Функция для открытия корзины\n  const openCart = () => {\n    setIsCartOpen(true);\n  };\n\n  // Функция для закрытия корзины\n  const closeCart = () => {\n    setIsCartOpen(false);\n  };\n\n  // Функция для добавления товара в корзину\n  const addToCart = (product, quantity) => {\n    setCartItems((prev) => {\n      const existing = prev.find(item => item.id === product.id);\n      if (existing) {\n        return prev.map(item =>\n          item.id === product.id\n            ? { ...item, quantity: item.quantity + quantity }\n            : item\n        );\n      } else {\n        return [...prev, { ...product, quantity }];\n      }\n    });\n  };\n\n  // Функция для обновления корзины из Cart компонента\n  const updateCartItems = (updatedItems) => {\n    setCartItems(updatedItems.map(item => ({ ...item, quantity: item.count })));\n  };\n\n  // Функция для открытия доставки\n  const openDelivery = () => {\n    setShowDelivery(true);\n  };\n\n  // Функция для открытия модала подтверждения заказа\n  const openOrderAccepted = () => {\n    setIsOrderAcceptedOpen(true);\n    setShowDelivery(false); // Закрыть модал доставки\n  };\n\n  // Функция для закрытия модала подтверждения заказа\n  const closeOrderAccepted = () => {\n    setIsOrderAcceptedOpen(false);\n  };\n\n  // Umumiy narxni hisoblash\n  const totalPrice = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n  const [showDelivery, setShowDelivery] = useState(false);\n  return (\n    <div>\n      <Navbar onCartClick={openCart} totalPrice={totalPrice} />\n      <Header />\n      <Tabs selectedCategory={selectedCategory} onSelectCategory={setSelectedCategory} />\n      <Menu selectedCategory={selectedCategory} addToCart={addToCart} />\n      <Footer />\n      \n\n      {/* Модальное окно корзины */}\n      {isCartOpen && (\n        <div className=\"cart-modal-overlay\">\n          <Cart onClose={closeCart} cartItems={cartItems} updateCartItems={updateCartItems} openDelivery={openDelivery} />\n        </div>\n      )}\n        {showDelivery && (\n            <div className=\"delivery-modal-overlay\">\n              <DeliveryForm onClose={() => setShowDelivery(false)} cartItems={cartItems} onOrderAccepted={openOrderAccepted} />\n            </div>\n          )}\n\n        {/* Модальное окно подтверждения заказа */}\n        {isOrderAcceptedOpen && (\n          <div className=\"order-accepted-modal-overlay\">\n            <OrderAccepted onClose={closeOrderAccepted} />\n          </div>\n        )}\n    </div>\n    \n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}